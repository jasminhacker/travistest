name: Publish Raveberry
on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - run: pip install -r requirements/frontend_build.txt
      - run: yarn --cwd frontend install
      - run: yarn --cwd frontend build
      - uses: actions/upload-artifact@v2
        with:
          name: frontend-files
          path: |
            static/bundle.js
            static/style.css
            static/*.woff2
  test-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - run: ls *
      - uses: actions/download-artifact@v2
        with:
          name: frontend-files
          path: static/
      - run: ls *
      - run: pip install -r requirements/frontend_test.txt
      - run: yarn --cwd frontend install
      - run: yarn --cwd frontend test
  test-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - uses: actions/checkout@v2
  test-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  check-versions:
    runs-on: ubuntu-latest
    outputs:
      # use output instead of conclusion because there are issues if the step does not succeed
      docker-status: ${{ steps.comparison.outputs.docker-status }}
      pypi-status: ${{ steps.comparison.outputs.pypi-status }}
    steps:
      - uses: actions/checkout@v2
  pypi-publish:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend, test-install, check-versions]
    # from https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
    steps:
      - uses: actions/checkout@v2
      - run: ls *
      - uses: actions/download-artifact@v2
        with:
          name: frontend-files
          path: static/
      - run: ls *
  docker-publish:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend, test-install, check-versions]
    steps:
      - uses: actions/checkout@v2
      - run: ls *
      - uses: actions/download-artifact@v2
        with:
          name: frontend-files
          path: static/
      - run: ls *

